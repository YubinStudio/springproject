<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yubin.springbootmybatis.mapper.kafkaOffsetMapper">
  <resultMap id="BaseResultMap" type="com.yubin.springbootmybatis.pojo.kafkaOffset">
    <id column="topicName" jdbcType="VARCHAR" property="topicname" />
    <id column="partitionId" jdbcType="INTEGER" property="partitionid" />
    <id column="groupId" jdbcType="VARCHAR" property="groupid" />
    <result column="offset" jdbcType="BIGINT" property="offset" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    topicName, partitionId, groupId, offset
  </sql>
  <select id="selectByExample" parameterType="com.yubin.springbootmybatis.pojo.kafkaOffsetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kafka_offset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.yubin.springbootmybatis.pojo.kafkaOffsetKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kafka_offset
    where topicName = #{topicname,jdbcType=VARCHAR}
      and partitionId = #{partitionid,jdbcType=INTEGER}
      and groupId = #{groupid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.yubin.springbootmybatis.pojo.kafkaOffsetKey">
    delete from kafka_offset
    where topicName = #{topicname,jdbcType=VARCHAR}
      and partitionId = #{partitionid,jdbcType=INTEGER}
      and groupId = #{groupid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yubin.springbootmybatis.pojo.kafkaOffsetExample">
    delete from kafka_offset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yubin.springbootmybatis.pojo.kafkaOffset">
    insert into kafka_offset (topicName, partitionId, groupId, 
      offset)
    values (#{topicname,jdbcType=VARCHAR}, #{partitionid,jdbcType=INTEGER}, #{groupid,jdbcType=VARCHAR}, 
      #{offset,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yubin.springbootmybatis.pojo.kafkaOffset">
    insert into kafka_offset
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="topicname != null">
        topicName,
      </if>
      <if test="partitionid != null">
        partitionId,
      </if>
      <if test="groupid != null">
        groupId,
      </if>
      <if test="offset != null">
        offset,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="topicname != null">
        #{topicname,jdbcType=VARCHAR},
      </if>
      <if test="partitionid != null">
        #{partitionid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null">
        #{groupid,jdbcType=VARCHAR},
      </if>
      <if test="offset != null">
        #{offset,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yubin.springbootmybatis.pojo.kafkaOffsetExample" resultType="java.lang.Long">
    select count(*) from kafka_offset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kafka_offset
    <set>
      <if test="record.topicname != null">
        topicName = #{record.topicname,jdbcType=VARCHAR},
      </if>
      <if test="record.partitionid != null">
        partitionId = #{record.partitionid,jdbcType=INTEGER},
      </if>
      <if test="record.groupid != null">
        groupId = #{record.groupid,jdbcType=VARCHAR},
      </if>
      <if test="record.offset != null">
        offset = #{record.offset,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kafka_offset
    set topicName = #{record.topicname,jdbcType=VARCHAR},
      partitionId = #{record.partitionid,jdbcType=INTEGER},
      groupId = #{record.groupid,jdbcType=VARCHAR},
      offset = #{record.offset,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yubin.springbootmybatis.pojo.kafkaOffset">
    update kafka_offset
    <set>
      <if test="offset != null">
        offset = #{offset,jdbcType=BIGINT},
      </if>
    </set>
    where topicName = #{topicname,jdbcType=VARCHAR}
      and partitionId = #{partitionid,jdbcType=INTEGER}
      and groupId = #{groupid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yubin.springbootmybatis.pojo.kafkaOffset">
    update kafka_offset
    set offset = #{offset,jdbcType=BIGINT}
    where topicName = #{topicname,jdbcType=VARCHAR}
      and partitionId = #{partitionid,jdbcType=INTEGER}
      and groupId = #{groupid,jdbcType=VARCHAR}
  </update>
</mapper>